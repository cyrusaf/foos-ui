// Generated by protoc-gen-twirp_typescript. DO NOT EDIT
import {foos} from './foos.pb';
import {createTwirpAdapter} from 'pbjs-twirp';
import Axios from 'axios';

const getServiceMethodName = (fn: any): string => {
	if (fn === foos.Foos.prototype.createPlayer) {
		return 'CreatePlayer';
    }
	if (fn === foos.Foos.prototype.getPlayers) {
		return 'GetPlayers';
    }
	if (fn === foos.Foos.prototype.inputGame) {
		return 'InputGame';
    }
	if (fn === foos.Foos.prototype.getGamesForPlayer) {
		return 'GetGamesForPlayer';
    }
	if (fn === foos.Foos.prototype.createLeague) {
		return 'CreateLeague';
    }
	if (fn === foos.Foos.prototype.getLeagues) {
		return 'GetLeagues';
    }

    throw new Error('Unknown Method');
};


export const FoosPathPrefix = '/twirp/foos.Foos/';

export const createFoos = (baseURL: string, options = {}): foos.Foos => {
    const defaultOpts = {
        baseURL: baseURL + FoosPathPrefix,
        headers: {
          Accept: 'application/protobuf'
        }
    };
    const axiosOpts = { ...defaultOpts, ...options };
    
    const axios = Axios.create(axiosOpts);

    return foos.Foos.create(createTwirpAdapter(axios, getServiceMethodName));
};
